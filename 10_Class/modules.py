# ----------------------------- Pygame Display -----------------------------
# display.set_mode() একটি নতুন Surface অবজেক্ট তৈরি করে, যা আমাদের তৈরি করা ছবি, লেখা, আঁকা ইত্যাদি দেখাতে সাহায্য করে।
# Pygame-এ একটি মাত্র ডিসপ্লে Surface থাকে, যেটি উইন্ডো বা ফুলস্ক্রিন হিসেবে কাজ করে।

# display মডিউলের কিছু গুরুত্বপূর্ণ মেথড:
# - set_mode(): নতুন উইন্ডো তৈরি করে
# - get_init(): pygame ইনিশিয়ালাইজ করা হয়েছে কিনা যাচাই করে
# - quit(): ডিসপ্লে বন্ধ করে
# - get_surface(): বর্তমান স্ক্রিন Surface রেফারেন্স দেয়
# - flip(): সম্পূর্ণ স্ক্রিন আপডেট করে (double buffering)
# - update(): নির্দিষ্ট অংশ আপডেট করে (flip-এর optimized ভার্সন)
# - fill(): স্ক্রিনে একটি নির্দিষ্ট রঙে ভরাট করে
# screen = pygame.display.set_mode((600, 600))


# ----------------------------- Rect ক্লাস -----------------------------
# Rect অবজেক্ট একটি আয়তাকার এলাকা সংরক্ষণ ও নিয়ন্ত্রণ করে।

# ball = pygame.image.load("ball.jpg")
# ballrect = ball.get_rect()  # এটি একটি Rect অবজেক্ট তৈরি করে

# Rect ক্লাসের গুরুত্বপূর্ণ মেথড:
# - copy(): একই রকম আরেকটি Rect তৈরি করে
# - move(x, y): নতুন অবস্থানে নিয়ে যায়, নতুন Rect দেয়
# - move_ip(x, y): Rect-এর অবস্থান inplace পরিবর্তন করে
# - inflate(dx, dy): সাইজ পরিবর্তন করে
# - update(): নতুন পজিশন সেট করে
# - clamp(rect): অন্য Rect-এর ভেতরে রাখে
# - clip(rect): দুই Rect-এর overlapping অংশ ফেরত দেয়
# - fit(rect): Aspect ratio ঠিক রেখে ফিট করে
# - collidepoint(x, y): নির্দিষ্ট পয়েন্ট Rect-এর মধ্যে আছে কিনা দেখে
# - colliderect(rect): দুটি Rect একে অপরকে ছুঁয়েছে কিনা দেখে


# ----------------------------- Event Queue -----------------------------
# pygame ইভেন্টগুলোর জন্য একটি ইভেন্ট কিউ ব্যবহার করে (যেমন মাউস ক্লিক, কী বোর্ড প্রেস ইত্যাদি)।
# প্রতিটি ফ্রেমে pygame.event.get() ব্যবহার করে ইভেন্ট হ্যান্ডেল না করলে নতুন ইভেন্ট হারিয়ে যেতে পারে।

# গুরুত্বপূর্ণ ইভেন্ট মেথড:
# - pygame.event.get(): সব ইভেন্ট বের করে
# - pygame.event.pump(), wait(), peek(), clear(): ইভেন্ট কিউ ম্যানেজ করে


# ----------------------------- Keyboard Input -----------------------------
# যখন কী চাপা হয় তখন KEYDOWN ইভেন্ট, আর ছেড়ে দিলে KEYUP ইভেন্ট ঘটে।

# কিবোর্ড ইনপুটের জন্য দরকারি ফাংশন:
# - pygame.key.get_focused(): স্ক্রিন ইনপুট নিচ্ছে কিনা
# - pygame.key.get_pressed(): সব কী-এর pressed অবস্থার তালিকা
# - pygame.key.name(key): কী এর নাম দেয়
# - pygame.key.key_code(name): কী নাম থেকে key code বের করে
# - start_text_input() / stop_text_input(): টেক্সট ইনপুট চালু/বন্ধ করে
# - set_text_input_rect(): টেক্সট ইনপুটের অবস্থান নিয়ন্ত্রণ করে


# ----------------------------- Font -----------------------------
# pygame.font.Font ব্যবহার করে লেখা রেন্ডার করা যায়।
# ফন্ট মডিউলের মাধ্যমে:
# - ফন্ট লোড করা
# - bold, italic, underline সেট করা
# - render() দিয়ে লেখা Surface তৈরি করা যায়


# ----------------------------- Image, Time, Music -----------------------------
# image: ছবি লোড, সেভ, ফরম্যাট কনভার্ট ইত্যাদি করতে পারে
# time: delay, pause, এবং Clock() ব্যবহার করে ফ্রেমরেট নিয়ন্ত্রণ করে
# music: প্লে, স্টপ, রিওয়াইন্ড সহ বিভিন্ন সাউন্ড কন্ট্রোল করে


# ----------------------------- Surface -----------------------------
# Surface হলো যেকোনো ছবি বা স্ক্রিনের bitmap রূপ।
# সব ছবি, ফন্ট, স্ক্রিন, ইত্যাদি Surface হিসেবে তৈরি হয়।

# Surface মেথডসমূহ:
# - blit(): একটি ইমেজ অন্যটির উপর আঁকে
# - blits(): একাধিক ইমেজ আঁকে
# - convert(): পিক্সেল ফরম্যাট পরিবর্তন করে
# - copy(): নতুন Surface কপি করে
# - fill(): একটি নির্দিষ্ট রঙে ভরাট করে
# - scroll(): ছবিকে স্থানান্তর করে
# - get_at((x,y)): একটি পিক্সেলের রঙ নেয়
# - set_at((x,y), color): একটি পিক্সেলের রঙ সেট করে
